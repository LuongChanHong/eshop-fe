[{"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\index.js":"1","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\App.jsx":"2","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\store.js":"3","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\reportWebVitals.js":"4","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Cart\\Cart.jsx":"5","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Authentication\\SignIn.jsx":"6","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Home\\Home.jsx":"7","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Authentication\\SignUp.jsx":"8","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Checkout\\Checkout.jsx":"9","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\History\\History.jsx":"10","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Detail\\Detail.jsx":"11","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Shop\\Shop.jsx":"12","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Share\\Header\\Header.jsx":"13","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Share\\Footer\\Footer.jsx":"14","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Share\\Chat\\Chat.jsx":"15","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\convertMoney.js":"16","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Authentication\\Name.jsx":"17","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Authentication\\LogoutLink.jsx":"18","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Authentication\\LoginLink.jsx":"19","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\API\\UserAPI.jsx":"20","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\API\\ProductAPI.jsx":"21","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\API\\MessengerAPI.jsx":"22","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\API\\CartAPI.jsx":"23","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\API\\CommentAPI.jsx":"24","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\API\\CheckoutAPI.jsx":"25","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Cart\\Component\\ListCart.jsx":"26","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Share\\img\\Image.jsx":"27","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Shop\\Component\\Search.jsx":"28","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Shop\\Component\\Products.jsx":"29","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Shop\\Component\\Pagination.jsx":"30","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Shop\\Component\\SortProduct.jsx":"31","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\API\\ChatRoomsAPI.jsx":"32","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\API\\HistoryAPI.jsx":"33","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\API\\axiosClient.jsx":"34","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Shop\\Component\\IndexPage.jsx":"35","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Redux\\Actions\\productAction.js":"36","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Redux\\Reducers\\userReducer.js":"37","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Redux\\Actions\\userAction.js":"38","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Redux\\Services\\UserService.js":"39","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Redux\\Services\\ProductService.js":"40","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Redux\\storeConfig.js":"41","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Redux\\Actions\\Types\\userType.js":"42","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Redux\\Actions\\index.js":"43","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Redux\\Services\\baseService.js":"44","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Redux\\path.js":"45","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Redux\\Actions\\cartAction.js":"46","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Redux\\Actions\\Types\\cartType.js":"47","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Redux\\Actions\\orderAction.js":"48","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Redux\\Services\\OrderService.js":"49","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Redux\\Services\\cartService.js":"50","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\History\\DetailHistory.jsx":"51","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\History\\MainHistory.jsx":"52"},{"size":832,"mtime":1678855295980,"results":"53","hashOfConfig":"54"},{"size":1501,"mtime":1677836965476,"results":"55","hashOfConfig":"54"},{"size":153,"mtime":1662556007000,"results":"56","hashOfConfig":"54"},{"size":396,"mtime":1662556007000,"results":"57","hashOfConfig":"54"},{"size":5680,"mtime":1676884161901,"results":"58","hashOfConfig":"54"},{"size":4876,"mtime":1678868566215,"results":"59","hashOfConfig":"54"},{"size":12942,"mtime":1678866806400,"results":"60","hashOfConfig":"54"},{"size":7178,"mtime":1677728139094,"results":"61","hashOfConfig":"54"},{"size":12488,"mtime":1677496623529,"results":"62","hashOfConfig":"54"},{"size":369,"mtime":1676886595138,"results":"63","hashOfConfig":"54"},{"size":18729,"mtime":1676870879726,"results":"64","hashOfConfig":"54"},{"size":13879,"mtime":1675498815117,"results":"65","hashOfConfig":"54"},{"size":3086,"mtime":1676364720506,"results":"66","hashOfConfig":"54"},{"size":2051,"mtime":1662556007000,"results":"67","hashOfConfig":"54"},{"size":7131,"mtime":1675498536354,"results":"68","hashOfConfig":"54"},{"size":290,"mtime":1662556007000,"results":"69","hashOfConfig":"54"},{"size":1236,"mtime":1675914804047,"results":"70","hashOfConfig":"54"},{"size":295,"mtime":1662556007000,"results":"71","hashOfConfig":"54"},{"size":644,"mtime":1678866794832,"results":"72","hashOfConfig":"54"},{"size":466,"mtime":1675914804032,"results":"73","hashOfConfig":"54"},{"size":591,"mtime":1675915561395,"results":"74","hashOfConfig":"54"},{"size":419,"mtime":1662556007000,"results":"75","hashOfConfig":"54"},{"size":596,"mtime":1675914804032,"results":"76","hashOfConfig":"54"},{"size":358,"mtime":1675914804032,"results":"77","hashOfConfig":"54"},{"size":223,"mtime":1675914804032,"results":"78","hashOfConfig":"54"},{"size":5965,"mtime":1676869546777,"results":"79","hashOfConfig":"54"},{"size":341,"mtime":1662556007000,"results":"80","hashOfConfig":"54"},{"size":986,"mtime":1662556007000,"results":"81","hashOfConfig":"54"},{"size":1718,"mtime":1675498776627,"results":"82","hashOfConfig":"54"},{"size":2163,"mtime":1662556007000,"results":"83","hashOfConfig":"54"},{"size":694,"mtime":1662556007000,"results":"84","hashOfConfig":"54"},{"size":478,"mtime":1675850903012,"results":"85","hashOfConfig":"54"},{"size":337,"mtime":1675914804032,"results":"86","hashOfConfig":"54"},{"size":861,"mtime":1675850844491,"results":"87","hashOfConfig":"54"},{"size":889,"mtime":1662556007000,"results":"88","hashOfConfig":"54"},{"size":536,"mtime":1676110648075,"results":"89","hashOfConfig":"54"},{"size":471,"mtime":1678866708297,"results":"90","hashOfConfig":"54"},{"size":1258,"mtime":1678866746483,"results":"91","hashOfConfig":"54"},{"size":609,"mtime":1678866452822,"results":"92","hashOfConfig":"54"},{"size":375,"mtime":1676091894897,"results":"93","hashOfConfig":"54"},{"size":876,"mtime":1676884191199,"results":"94","hashOfConfig":"54"},{"size":75,"mtime":1676522435254,"results":"95","hashOfConfig":"54"},{"size":97,"mtime":1675914804050,"results":"96","hashOfConfig":"54"},{"size":773,"mtime":1678784053729,"results":"97","hashOfConfig":"54"},{"size":113,"mtime":1678439110444,"results":"98","hashOfConfig":"54"},{"size":1016,"mtime":1676884174217,"results":"99","hashOfConfig":"54"},{"size":202,"mtime":1676435465672,"results":"100","hashOfConfig":"54"},{"size":685,"mtime":1676888097688,"results":"101","hashOfConfig":"54"},{"size":453,"mtime":1676886198430,"results":"102","hashOfConfig":"54"},{"size":964,"mtime":1676880733450,"results":"103","hashOfConfig":"54"},{"size":4358,"mtime":1676888812942,"results":"104","hashOfConfig":"54"},{"size":4866,"mtime":1676888770367,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1r7kwpe",{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"110"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"110"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"110"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"110"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"113"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"110"},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"168"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"110"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"110"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"193","messages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"110"},{"filePath":"202","messages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"110"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"110"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"110"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"110"},"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\index.js",[],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\App.jsx",[],["230","231"],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\store.js",[],["232","233"],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\reportWebVitals.js",[],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Cart\\Cart.jsx",["234","235"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ListCart from \"./Component/ListCart\";\r\nimport alertify from \"alertifyjs\";\r\nimport { Link } from \"react-router-dom\";\r\n// import queryString from \"query-string\";\r\nimport convertMoney from \"../convertMoney\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport {\r\n  deleteItem,\r\n  getCart,\r\n  updateQuantity,\r\n} from \"../Redux/Actions/cartAction\";\r\n\r\nfunction Cart() {\r\n  const navigate = useNavigate();\r\n\r\n  const userId = useSelector((state) => state.user.userId);\r\n  const [total, setTotal] = useState();\r\n  const [cartItems, setCartItems] = useState([]);\r\n\r\n  const getTotal = (itemList) => {\r\n    let sub_total = 0;\r\n    itemList.forEach((item) => {\r\n      sub_total += item.price * item.quantity;\r\n    });\r\n\r\n    setTotal(sub_total);\r\n  };\r\n  const getCartByUserId = async () => {\r\n    const response = await getCart(userId);\r\n    console.log(\"response.items:\", response.items);\r\n    getTotal(response.items);\r\n    setCartItems(response.items);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCartByUserId();\r\n  }, []);\r\n\r\n  // Hàm truyền vào mỗi quantity btn thuộc item trong comp ListCart\r\n  const changeQuantity = async (productId, quantity) => {\r\n    const data = {\r\n      userId: userId,\r\n      productId: productId,\r\n      quantity: quantity,\r\n    };\r\n    await updateQuantity(data);\r\n\r\n    // cập nhập lại cart sau khi thêm/ bớt product quantity\r\n    await getCartByUserId();\r\n\r\n    alertify.set(\"notifier\", \"position\", \"bottom-left\");\r\n    alertify.success(\"Bạn Đã Sửa Hàng Thành Công!\");\r\n  };\r\n\r\n  const deleteCartItem = async (productId) => {\r\n    await deleteItem(userId, productId);\r\n\r\n    // cập nhập lại cart sau khi xóa 1 product\r\n    await getCartByUserId();\r\n\r\n    alertify.set(\"notifier\", \"position\", \"bottom-left\");\r\n    alertify.error(\"Bạn Đã Xóa Hàng Thành Công!\");\r\n  };\r\n\r\n  const onCheckout = () => {\r\n    if (cartItems.length === 0) {\r\n      alertify.set(\"notifier\", \"position\", \"bottom-left\");\r\n      alertify.error(\"Vui Lòng Kiểm Tra Lại Giỏ Hàng!\");\r\n      return;\r\n    }\r\n\r\n    navigate(\"/checkout\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {/* BREADCRUMB - STAR T*/}\r\n      <section className=\"py-5 bg-light\">\r\n        <div className=\"container\">\r\n          <div className=\"row px-4 px-lg-5 py-lg-4 align-items-center\">\r\n            <div className=\"col-lg-6\">\r\n              <h1 className=\"h2 text-uppercase mb-0\">Cart</h1>\r\n            </div>\r\n            <div className=\"col-lg-6 text-lg-right\">\r\n              <nav aria-label=\"breadcrumb\">\r\n                <ol className=\"breadcrumb justify-content-lg-end mb-0 px-0\">\r\n                  <li className=\"breadcrumb-item active\" aria-current=\"page\">\r\n                    Cart\r\n                  </li>\r\n                </ol>\r\n              </nav>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      {/* BREADCRUMB - END */}\r\n\r\n      <section className=\"py-5\">\r\n        <h2 className=\"h5 text-uppercase mb-4\">Shopping cart</h2>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-8 mb-4 mb-lg-0\">\r\n            <ListCart\r\n              cartItems={cartItems}\r\n              deleteCartItem={deleteCartItem}\r\n              changeQuantity={changeQuantity}\r\n            />\r\n\r\n            {/* NAVIGAVE BUTTONS - START */}\r\n            <div className=\"bg-light px-4 py-3\">\r\n              <div className=\"row align-items-center text-center\">\r\n                <div className=\"col-md-6 mb-3 mb-md-0 text-md-left\">\r\n                  <Link\r\n                    className=\"btn btn-link p-0 text-dark btn-sm\"\r\n                    to={`/shop`}\r\n                  >\r\n                    <i className=\"fas fa-long-arrow-alt-left mr-2\"> </i>\r\n                    Continue shopping\r\n                  </Link>\r\n                </div>\r\n                <div className=\"col-md-6 text-md-right\">\r\n                  <span\r\n                    className=\"btn btn-outline-dark btn-sm\"\r\n                    onClick={onCheckout}\r\n                  >\r\n                    Proceed to checkout\r\n                    <i className=\"fas fa-long-arrow-alt-right ml-2\"></i>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            {/* NAVIGAVE BUTTONS - END */}\r\n          </div>\r\n          {/* TOTAL PRICE - START */}\r\n          <div className=\"col-lg-4\">\r\n            <div className=\"card border-0 rounded-0 p-lg-4 bg-light\">\r\n              <div className=\"card-body\">\r\n                <h5 className=\"text-uppercase mb-4\">Cart total</h5>\r\n                <ul className=\"list-unstyled mb-0\">\r\n                  {/* <li className=\"d-flex align-items-center justify-content-between\">\r\n                    <strong className=\"text-uppercase small font-weight-bold\">\r\n                      Subtotal\r\n                    </strong>\r\n                    <span className=\"text-muted small\">\r\n                      {convertMoney(total)} VND\r\n                    </span>\r\n                  </li> */}\r\n                  <li className=\"border-bottom my-2\"></li>\r\n                  <li className=\"d-flex align-items-center justify-content-between mb-4\">\r\n                    <strong className=\"text-uppercase small font-weight-bold\">\r\n                      Total\r\n                    </strong>\r\n                    <span>{convertMoney(total)} VND</span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* TOTAL PRICE - END */}\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Authentication\\SignIn.jsx",["236","237","238"],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Home\\Home.jsx",["239","240","241","242","243"],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Authentication\\SignUp.jsx",["244"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\n\n// import UserAPI from \"../API/UserAPI\";\nimport \"./Auth.css\";\n// import queryString from \"query-string\";\n// import MessengerAPI from \"../API/MessengerAPI\";\n\nimport { signUpAction } from \"../Redux/Actions/userAction\";\n\nSignUp.propTypes = {};\n\nfunction SignUp(props) {\n  const [fullname, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n\n  const [errorEmail, setEmailError] = useState(false);\n  const [emailRegex, setEmailRegex] = useState(false);\n  const [errorPassword, setPasswordError] = useState(false);\n  const [errorFullname, setFullnameError] = useState(false);\n  const [errorPhone, setPhoneError] = useState(false);\n\n  const [success, setSuccess] = useState(false);\n\n  const navigate = useNavigate();\n\n  const onChangeName = (e) => {\n    setFullName(e.target.value);\n  };\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const onChangePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const onChangePhone = (e) => {\n    setPhone(e.target.value);\n  };\n\n  const handleSetError = (errList) => {\n    const errInput = errList.map((item) => item.param);\n    if (errInput.includes(\"fullname\")) {\n      setFullnameError(true);\n    }\n    if (errInput.includes(\"email\")) {\n      setEmailError(true);\n    }\n    if (errInput.includes(\"password\")) {\n      setPasswordError(true);\n    }\n    if (errInput.includes(\"phone\")) {\n      setPhoneError(true);\n    }\n  };\n\n  const inputValidation = () => {\n    if (!fullname) {\n      setFullnameError(true);\n      setEmailError(false);\n      setPhoneError(false);\n      setPasswordError(false);\n      setEmailRegex(false);\n      return false;\n    } else {\n      setFullnameError(false);\n      setPhoneError(false);\n      setPasswordError(false);\n      setFullnameError(false);\n      setEmailRegex(false);\n\n      if (!email) {\n        setFullnameError(false);\n        setEmailError(true);\n        setPhoneError(false);\n        setPasswordError(false);\n        return false;\n      } else {\n        setEmailError(false);\n        setPhoneError(false);\n        setPasswordError(false);\n        setFullnameError(false);\n\n        if (!validateEmail(email)) {\n          setEmailRegex(true);\n          setFullnameError(false);\n          setEmailError(false);\n          setPhoneError(false);\n          setPasswordError(false);\n          return false;\n        } else {\n          setEmailRegex(false);\n\n          if (!password) {\n            setFullnameError(false);\n            setEmailError(false);\n            setPhoneError(false);\n            setPasswordError(true);\n            return false;\n          } else {\n            setFullnameError(false);\n            setPhoneError(false);\n            setPasswordError(false);\n            setFullnameError(false);\n            setEmailRegex(false);\n\n            if (!phone) {\n              setFullnameError(false);\n              setEmailError(false);\n              setPhoneError(true);\n              setPasswordError(false);\n            } else {\n              return true;\n            }\n          }\n        }\n      }\n    }\n  };\n\n  const handlerSignUp = () => {\n    const isInputValid = inputValidation();\n    if (isInputValid) {\n      // console.log(\"Thanh Cong\");\n      const fetchSignUp = async () => {\n        const signupData = {\n          fullname: fullname,\n          email: email,\n          password: password,\n          phone: phone,\n        };\n\n        const response = await signUpAction(signupData);\n        console.log(\"response:\", response);\n        if (response.errors) {\n          handleSetError(response.errors);\n        } else {\n          setSuccess(true);\n        }\n      };\n\n      fetchSignUp();\n      navigate(\"/signin\");\n    }\n  };\n\n  // Hàm này dùng để tạo các conversation cho user và admin\n  // const fetchConversation = async () => {\n  //   const params = {\n  //     email: email,\n  //     password: password,\n  //   };\n\n  //   const query = \"?\" + queryString.stringify(params);\n\n  //   const response = await MessengerAPI.postConversation(query);\n  //   console.log(response);\n  // };\n\n  // fetchConversation();\n\n  function validateEmail(email) {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  return (\n    <div className=\"limiter\">\n      <div className=\"container-login100\">\n        <div className=\"wrap-login100 p-l-55 p-r-55 p-t-65 p-b-50\">\n          <span className=\"login100-form-title p-b-33\">Sign Up</span>\n          <div className=\"d-flex flex-column justify-content-center pb-5\">\n            {errorFullname && (\n              <span className=\"text-danger\">\n                * Please Check Your Full Name!\n              </span>\n            )}\n            {errorEmail && (\n              <span className=\"text-danger\">* Please Check Your Email!</span>\n            )}\n            {emailRegex && (\n              <span className=\"text-danger\">* Incorrect Email Format</span>\n            )}\n            {errorPassword && (\n              <span className=\"text-danger\">* Please Check Your Password!</span>\n            )}\n            {errorPhone && (\n              <span className=\"text-danger\">\n                * Please Check Your Phone Number!\n              </span>\n            )}\n          </div>\n          <div className=\"wrap-input100 validate-input\">\n            <input\n              className=\"input100\"\n              value={fullname}\n              onChange={onChangeName}\n              type=\"text\"\n              placeholder=\"Full Name\"\n            />\n          </div>\n\n          <div className=\"wrap-input100 rs1 validate-input\">\n            <input\n              className=\"input100\"\n              value={email}\n              onChange={onChangeEmail}\n              type=\"text\"\n              placeholder=\"Email\"\n            />\n          </div>\n\n          <div className=\"wrap-input100 rs1 validate-input\">\n            <input\n              className=\"input100\"\n              value={password}\n              onChange={onChangePassword}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          </div>\n\n          <div className=\"wrap-input100 rs1 validate-input\">\n            <input\n              className=\"input100\"\n              value={phone}\n              onChange={onChangePhone}\n              type=\"tel\"\n              placeholder=\"Phone\"\n            />\n          </div>\n\n          <div className=\"container-login100-form-btn m-t-20\">\n            <button className=\"login100-form-btn\" onClick={handlerSignUp}>\n              Sign Up\n            </button>\n          </div>\n\n          <div className=\"text-center p-t-45 p-b-4\">\n            <span className=\"txt1\">Login?</span>\n            &nbsp;\n            <Link to=\"/signin\" className=\"txt2 hov1\">\n              Click\n            </Link>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SignUp;\n","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Checkout\\Checkout.jsx",["245","246","247","248"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\n// import CheckoutAPI from \"../API/CheckoutAPI\";\nimport convertMoney from \"../convertMoney\";\nimport \"./Checkout.css\";\n\nimport { createOrder } from \"../Redux/Actions/orderAction\";\nimport { getInfo } from \"../Redux/Actions/userAction\";\nimport { getCart } from \"../Redux/Actions/cartAction\";\n\n// import io from \"socket.io-client\";\n// const socket = io(\"http://localhost:5000\");\n\nfunction Checkout(props) {\n  const [cartItems, setCartItems] = useState([]);\n  const [total, setTotal] = useState(0);\n\n  const [fullname, setFullname] = useState(\"\");\n  const [fullnameError, setFullnameError] = useState(false);\n\n  const [email, setEmail] = useState(\"\");\n  const [emailError, setEmailError] = useState(false);\n  const [emailRegex, setEmailRegex] = useState(false);\n\n  const [phone, setPhone] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(false);\n\n  const [address, setAddress] = useState(\"\");\n  const [addressError, setAddressError] = useState(false);\n\n  const [success, setSuccess] = useState(false);\n  const [load, setLoad] = useState(false);\n\n  const userId = useSelector((state) => state.user.userId);\n  const navigate = useNavigate();\n\n  const getTotal = (itemList) => {\n    let sub_total = 0;\n    itemList.forEach((item) => {\n      sub_total += item.price * item.quantity;\n    });\n\n    setTotal(sub_total);\n  };\n  const getCartByUserId = async () => {\n    const response = await getCart(userId);\n    console.log(\"response.items:\", response.items);\n    getTotal(response.items);\n    setCartItems(response.items);\n  };\n\n  //Hàm này dùng để gọi API và render số sản phẩm\n  useEffect(() => {\n    getCartByUserId();\n\n    const getUserInfo = async () => {\n      const response = await getInfo(userId);\n      // console.log(\"response\", response);\n      setFullname(response.fullname);\n      setEmail(response.email);\n      setPhone(response.phone);\n      setAddress(response.address || \"\");\n    };\n    getUserInfo();\n  }, []);\n\n  const inputValidation = () => {\n    if (!fullname) {\n      setFullnameError(true);\n      setEmailError(false);\n      setPhoneError(false);\n      setAddressError(false);\n      return false;\n    } else {\n      if (!email) {\n        setFullnameError(false);\n        setEmailError(true);\n        setPhoneError(false);\n        setAddressError(false);\n        return false;\n      } else {\n        setPhoneError(false);\n        setAddressError(false);\n        setFullnameError(false);\n\n        if (!validateEmail(email)) {\n          setEmailRegex(true);\n          setFullnameError(false);\n          setEmailError(false);\n          setPhoneError(false);\n          setAddressError(false);\n          return false;\n        } else {\n          setEmailRegex(false);\n\n          if (!phone) {\n            setFullnameError(false);\n            setEmailError(false);\n            setPhoneError(true);\n            setAddressError(false);\n            return false;\n          } else {\n            setFullnameError(false);\n            setEmailError(false);\n            setPhoneError(false);\n            setAddressError(false);\n\n            if (!address) {\n              setFullnameError(false);\n              setEmailError(false);\n              setPhoneError(false);\n              setAddressError(true);\n            } else {\n              return true;\n            }\n          }\n        }\n      }\n    }\n  };\n\n  //Check Validation\n  const handlerSubmit = () => {\n    const isInputValid = inputValidation();\n    if (isInputValid) {\n      console.log(\"Thanh Cong\");\n\n      // setLoad(!load);\n      createOrder({\n        user: {\n          userId: userId,\n          fullname: fullname,\n          email: email,\n          phone: phone,\n          address: address,\n        },\n        products: cartItems,\n        totalPrice: total,\n      });\n\n      navigate(\"/history\");\n    }\n  };\n\n  const onChangeName = (e) => {\n    setFullname(e.target.value);\n  };\n\n  const onChangeEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const onChangePhone = (e) => {\n    setPhone(e.target.value);\n  };\n\n  const onChangeAddress = (e) => {\n    setAddress(e.target.value);\n  };\n\n  function validateEmail(email) {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  return (\n    <div>\n      {load && (\n        <div className=\"wrapper_loader\">\n          <div className=\"loader\"></div>\n        </div>\n      )}\n\n      <div className=\"container\">\n        <section className=\"py-5 bg-light\">\n          <div className=\"container\">\n            {/* BREADCRUMB - START */}\n            <div className=\"row px-4 px-lg-5 py-lg-4 align-items-center\">\n              <div className=\"col-lg-6\">\n                <h1 className=\"h2 text-uppercase mb-0\">Checkout</h1>\n              </div>\n              <div className=\"col-lg-6 text-lg-right\">\n                <nav aria-label=\"breadcrumb\">\n                  <ol className=\"breadcrumb justify-content-lg-end mb-0 px-0\">\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/\">Home</a>\n                    </li>\n                    <li className=\"breadcrumb-item\">\n                      <a href=\"/cart\">Cart</a>\n                    </li>\n                    <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                      Checkout\n                    </li>\n                  </ol>\n                </nav>\n              </div>\n            </div>\n            {/* BREADCRUMB - END */}\n          </div>\n        </section>\n\n        {!success && (\n          <section className=\"py-5\">\n            <h2 className=\"h5 text-uppercase mb-4\">Billing details</h2>\n            <div className=\"row\">\n              {/* USER INFO FORM - START */}\n              <div className=\"col-lg-8\">\n                <form>\n                  <div className=\"row\">\n                    {/* name input - start */}\n                    <div className=\"col-lg-12 form-group\">\n                      <label\n                        className=\"text-small text-uppercase\"\n                        htmlFor=\"Fullname\"\n                      >\n                        Full Name:\n                      </label>\n                      <input\n                        className=\"form-control form-control-lg\"\n                        value={fullname}\n                        onChange={onChangeName}\n                        type=\"text\"\n                        placeholder=\"Enter Your Full Name Here!\"\n                      />\n                      {fullnameError && (\n                        <span className=\"text-danger\">\n                          * Please Check Your Full Name!\n                        </span>\n                      )}\n                    </div>\n                    {/* name input - end */}\n\n                    {/* email input - start */}\n                    <div className=\"col-lg-12 form-group\">\n                      <label\n                        className=\"text-small text-uppercase\"\n                        htmlFor=\"Email\"\n                      >\n                        Email:{\" \"}\n                      </label>\n                      <input\n                        className=\"form-control form-control-lg\"\n                        value={email}\n                        onChange={onChangeEmail}\n                        type=\"text\"\n                        placeholder=\"Enter Your Email Here!\"\n                      />\n                      {emailError && (\n                        <span className=\"text-danger\">\n                          * Please Check Your Email!\n                        </span>\n                      )}\n                      {emailRegex && (\n                        <span className=\"text-danger\">\n                          * Incorrect Email Format\n                        </span>\n                      )}\n                    </div>\n                    {/* email input - end */}\n\n                    {/* phone input - start */}\n                    <div className=\"col-lg-12 form-group\">\n                      <label\n                        className=\"text-small text-uppercase\"\n                        htmlFor=\"Phone\"\n                      >\n                        Phone Number:{\" \"}\n                      </label>\n                      <input\n                        className=\"form-control form-control-lg\"\n                        value={phone}\n                        onChange={onChangePhone}\n                        type=\"text\"\n                        placeholder=\"Enter Your Phone Number Here!\"\n                      />\n                      {phoneError && (\n                        <span className=\"text-danger\">\n                          * Please Check Your Phone Number!\n                        </span>\n                      )}\n                    </div>\n                    {/* phone input - end */}\n\n                    {/* address input - start */}\n                    <div className=\"col-lg-12 form-group\">\n                      <label\n                        className=\"text-small text-uppercase\"\n                        htmlFor=\"Address\"\n                      >\n                        Address:{\" \"}\n                      </label>\n                      <input\n                        className=\"form-control form-control-lg\"\n                        value={address}\n                        onChange={onChangeAddress}\n                        type=\"text\"\n                        placeholder=\"Enter Your Address Here!\"\n                      />\n                      {addressError && (\n                        <span className=\"text-danger\">\n                          * Please Check Your Address!\n                        </span>\n                      )}\n                    </div>\n                    {/* address input - end */}\n\n                    {/* order button - start */}\n                    <div className=\"col-lg-12 form-group\">\n                      <a\n                        className=\"btn btn-dark\"\n                        style={{ color: \"white\" }}\n                        type=\"submit\"\n                        onClick={handlerSubmit}\n                      >\n                        Place order\n                      </a>\n                    </div>\n                    {/* order button - end */}\n                  </div>\n                </form>\n              </div>\n              {/* USER INFO FORM - END */}\n\n              {/* ORDER DETAIL - START */}\n              <div className=\"col-lg-4\">\n                <div className=\"card border-0 rounded-0 p-lg-4 bg-light\">\n                  <div className=\"card-body\">\n                    <h5 className=\"text-uppercase mb-4\">Your order</h5>\n                    <ul className=\"list-unstyled mb-0\">\n                      {cartItems &&\n                        cartItems.map((item, i) => (\n                          <div key={i}>\n                            <li className=\"d-flex align-items-center justify-content-between\">\n                              <strong className=\"small font-weight-bold\">\n                                {item.productName}\n                              </strong>\n                              <br></br>\n                              <span className=\"text-muted small\">\n                                {convertMoney(item.price)} x {item.quantity}\n                              </span>\n                            </li>\n                            <li className=\"border-bottom my-2\"></li>\n                          </div>\n                        ))}\n                      <li className=\"d-flex align-items-center justify-content-between\">\n                        <strong className=\"text-uppercase small font-weight-bold\">\n                          Total\n                        </strong>\n                        <span>{convertMoney(total)} VND</span>\n                      </li>\n                    </ul>\n                  </div>\n                </div>\n              </div>\n              {/* ORDER DETAIL - END */}\n            </div>\n          </section>\n        )}\n\n        {/* {success && (\n          <section className=\"py-5\">\n            <div className=\"p-5\">\n              <h1>You Have Successfully Ordered!</h1>\n              <p style={{ fontSize: \"1.2rem\" }}>Please Check Your Email.</p>\n            </div>\n          </section>\n        )} */}\n      </div>\n    </div>\n  );\n}\n\nexport default Checkout;\n","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\History\\History.jsx",[],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Detail\\Detail.jsx",["249","250","251","252"],"import React, { useEffect, useState } from \"react\";\r\n// import ProductAPI from \"../API/ProductAPI\";\r\n\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import alertify from \"alertifyjs\";\r\n// import { addCart } from \"../Redux/Action/ActionCart\";\r\n// import CartAPI from \"../API/CartAPI\";\r\n// import queryString from \"query-string\";\r\n// import CommentAPI from \"../API/CommentAPI\";\r\nimport convertMoney from \"../convertMoney\";\r\n\r\nimport {\r\n  getProductDetail,\r\n  getAllProduct,\r\n} from \"../Redux/Actions/productAction\";\r\n\r\nimport { addToCart } from \"../Redux/Actions/cartAction\";\r\n\r\nfunction Detail(props) {\r\n  const [detail, setDetail] = useState({});\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  //id params cho từng sản phẩm\r\n  const { id } = useParams();\r\n\r\n  const userId = useSelector((state) => state.user.userId);\r\n\r\n  //id_user được lấy từ redux\r\n  // const id_user = useSelector((state) => state.Cart.id_user);\r\n\r\n  //listCart được lấy từ redux\r\n  // const listCart = useSelector((state) => state.Cart.listCart);\r\n\r\n  const [product, setProduct] = useState([]);\r\n\r\n  // const [star, setStar] = useState(1);\r\n\r\n  // const [comment, setComment] = useState(\"\");\r\n\r\n  // id_user đã đăng nhập\r\n  // const idUser = useSelector((state) => state.Session.idUser);\r\n\r\n  // Listcomment\r\n  // const [list_comment, set_list_comment] = useState([]);\r\n\r\n  // state này dùng để load lại comment khi user gửi comment lên\r\n  // const [load_comment, set_load_comment] = useState(false);\r\n\r\n  // Hàm này dùng để lấy dữ liệu comment\r\n  // Hàm này sẽ chạy lại phụ thuộc vào id Param\r\n  // useEffect(() => {\r\n  //   const fetchData = async () => {\r\n  //     const params = {\r\n  //       idProduct: id,\r\n  //     };\r\n\r\n  //     const query = \"?\" + queryString.stringify(params);\r\n\r\n  //     const response = await CommentAPI.getCommentProduct(query);\r\n  //     console.log(response);\r\n\r\n  //     set_list_comment(response);\r\n  //   };\r\n\r\n  //   fetchData();\r\n  // }, [id]);\r\n\r\n  // Hàm thay đổi sao đánh giá\r\n  // const onChangeStar = (e) => {\r\n  //   setStar(e.target.value);\r\n  // };\r\n\r\n  // Hàm thay đổi comment\r\n  // const onChangeComment = (e) => {\r\n  //   setComment(e.target.value);\r\n  // };\r\n\r\n  // Hàm này dùng để bình luận\r\n  // const handlerComment = () => {\r\n  //   if (idUser === \"\") {\r\n  //     alertify.set(\"notifier\", \"position\", \"bottom-left\");\r\n  //     alertify.error(\"Vui Lòng Kiểm Tra Đăng Nhập!\");\r\n  //     return;\r\n  //   }\r\n\r\n  //   const fetchSendComment = async () => {\r\n  //     const params = {\r\n  //       idProduct: id,\r\n  //       idUser: localStorage.getItem(\"id_user\"),\r\n  //       fullname: localStorage.getItem(\"name_user\"),\r\n  //       content: comment,\r\n  //       star: star,\r\n  //     };\r\n\r\n  //     const query = \"?\" + queryString.stringify(params);\r\n\r\n  //     const response = await CommentAPI.postCommentProduct(query);\r\n  //     console.log(response);\r\n\r\n  //     set_load_comment(true);\r\n  //   };\r\n\r\n  //   fetchSendComment();\r\n\r\n  //   setComment(\"\");\r\n  // };\r\n\r\n  // Hàm này dùng để load lại dữ liệu comment\r\n  // Phụ thuộc vào state load_comment\r\n  // useEffect(() => {\r\n  //   if (load_comment) {\r\n  //     const fetchData = async () => {\r\n  //       const params = {\r\n  //         idProduct: id,\r\n  //       };\r\n\r\n  //       const query = \"?\" + queryString.stringify(params);\r\n\r\n  //       const response = await CommentAPI.getCommentProduct(query);\r\n  //       console.log(response);\r\n\r\n  //       set_list_comment(response);\r\n  //     };\r\n\r\n  //     fetchData();\r\n\r\n  //     set_load_comment(false);\r\n  //   }\r\n  // }, [load_comment]);\r\n\r\n  //Hàm này gọi API và cắt chỉ lấy 4 sản phẩm\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await getAllProduct();\r\n      // console.log(response);\r\n      setProduct(response);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  //Phần này là để thay đổi số lượng khi mua sản phẩm\r\n  const [quantity, setQuantity] = useState(1);\r\n  const onChangeText = (e) => {\r\n    setQuantity(e.target.value);\r\n  };\r\n\r\n  //Tăng lên 1 đơn vị\r\n  const addQuantity = () => {\r\n    const value = parseInt(quantity) + 1;\r\n    setQuantity(value);\r\n  };\r\n\r\n  //Giảm 1 đơn vị\r\n  const minusQuantity = () => {\r\n    const value = parseInt(quantity) - 1;\r\n    if (value === 0) return;\r\n    setQuantity(value);\r\n  };\r\n\r\n  //Hàm này để lấy dữ liệu chi tiết sản phẩm\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await getProductDetail(id);\r\n      // console.log(response);\r\n      setDetail(response);\r\n    };\r\n\r\n    fetchData();\r\n  }, [id]);\r\n\r\n  //Phần này dùng để xem review hay description\r\n  const [review, setReview] = useState(\"description\");\r\n  const handlerReview = (value) => {\r\n    setReview(value);\r\n  };\r\n\r\n  //Hàm này là Thêm Sản Phẩm\r\n  const handleAddToCart = async () => {\r\n    if (userId === \"\") {\r\n      navigate(\"/signin\");\r\n    }\r\n\r\n    const addData = {\r\n      selectedItem: {\r\n        productId: detail._id,\r\n        price: detail.price,\r\n        quantity: quantity,\r\n      },\r\n      userId: userId,\r\n    };\r\n    await addToCart(addData);\r\n    navigate(\"/cart\");\r\n\r\n    // alertify.set(\"notifier\", \"position\", \"bottom-left\");\r\n    // alertify.success(\"Bạn Đã Thêm Hàng Thành Công!\");\r\n  };\r\n\r\n  return (\r\n    <section className=\"py-5\">\r\n      <div className=\"container\">\r\n        {/* PRODUCT IMAGE AND DETAIL - START */}\r\n        <div className=\"row mb-5\">\r\n          {/* CAROUSEL - START */}\r\n          <div className=\"col-lg-6\">\r\n            <div className=\"row m-sm-0\">\r\n              {/* image list - start */}\r\n              <div className=\"col-sm-2 p-sm-0 order-2 order-sm-1 mt-2 mt-sm-0\">\r\n                <div\r\n                  className=\"owl-thumbs d-flex flex-row flex-sm-column\"\r\n                  data-slider-id=\"1\"\r\n                >\r\n                  <div className=\"owl-thumb-item flex-fill mb-2 mr-2 mr-sm-0\">\r\n                    <img className=\"w-100\" src={detail.img1} alt=\"...\" />\r\n                  </div>\r\n                  <div className=\"owl-thumb-item flex-fill mb-2 mr-2 mr-sm-0\">\r\n                    <img className=\"w-100\" src={detail.img2} alt=\"...\" />\r\n                  </div>\r\n                  <div className=\"owl-thumb-item flex-fill mb-2 mr-2 mr-sm-0\">\r\n                    <img className=\"w-100\" src={detail.img3} alt=\"...\" />\r\n                  </div>\r\n                  <div className=\"owl-thumb-item flex-fill mb-2 mr-2 mr-sm-0\">\r\n                    <img className=\"w-100\" src={detail.img4} alt=\"...\" />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {/* image list - end */}\r\n\r\n              {/* carousel and control button - start */}\r\n              <div\r\n                id=\"carouselExampleControls\"\r\n                className=\"carousel slide col-sm-10 order-1 order-sm-2\"\r\n                data-ride=\"carousel\"\r\n              >\r\n                <div className=\"carousel-inner owl-carousel product-slider\">\r\n                  <div className=\"carousel-item active\">\r\n                    <img\r\n                      className=\"d-block w-100\"\r\n                      src={detail.img1}\r\n                      alt=\"First slide\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"carousel-item\">\r\n                    <img\r\n                      className=\"d-block w-100\"\r\n                      src={detail.img2}\r\n                      alt=\"Second slide\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"carousel-item\">\r\n                    <img\r\n                      className=\"d-block w-100\"\r\n                      src={detail.img3}\r\n                      alt=\"Third slide\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"carousel-item\">\r\n                    <img\r\n                      className=\"d-block w-100\"\r\n                      src={detail.img4}\r\n                      alt=\"Third slide\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <a\r\n                  className=\"carousel-control-prev\"\r\n                  href=\"#carouselExampleControls\"\r\n                  role=\"button\"\r\n                  data-slide=\"prev\"\r\n                >\r\n                  <span\r\n                    className=\"carousel-control-prev-icon\"\r\n                    aria-hidden=\"true\"\r\n                  ></span>\r\n                  <span className=\"sr-only\">Previous</span>\r\n                </a>\r\n                <a\r\n                  className=\"carousel-control-next\"\r\n                  href=\"#carouselExampleControls\"\r\n                  role=\"button\"\r\n                  data-slide=\"next\"\r\n                >\r\n                  <span\r\n                    className=\"carousel-control-next-icon\"\r\n                    aria-hidden=\"true\"\r\n                  ></span>\r\n                  <span className=\"sr-only\">Next</span>\r\n                </a>\r\n              </div>\r\n              {/* carousel and control button - end */}\r\n            </div>\r\n          </div>\r\n          {/* CAROUSEL - END */}\r\n\r\n          {/* PRODUCT DETAIL - START */}\r\n          <div className=\"col-lg-6\">\r\n            <br></br>\r\n            <h1>{detail.name}</h1>\r\n            <br></br>\r\n            <p className=\"text-muted lead\">{convertMoney(detail.price)} VND</p>\r\n            <br></br>\r\n            <p className=\"text-small mb-4\">{detail.short_desc}</p>\r\n            <ul className=\"list-unstyled small d-inline-block\">\r\n              <li className=\"mb-3 bg-white text-muted\">\r\n                <strong className=\"text-uppercase text-dark\">Category:</strong>\r\n                <a className=\"reset-anchor ml-2\">{detail.categorys}</a>\r\n              </li>\r\n            </ul>\r\n            <div className=\"row align-items-stretch mb-4\">\r\n              <div className=\"col-sm-5 pr-sm-0\">\r\n                <div className=\"border d-flex align-items-center justify-content-between py-1 px-3 bg-white border-white\">\r\n                  <span className=\"small text-uppercase text-gray mr-4 no-select\">\r\n                    Quantity\r\n                  </span>\r\n                  <div className=\"quantity\">\r\n                    <button\r\n                      className=\"dec-btn p-0\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                    >\r\n                      <i\r\n                        className=\"fas fa-caret-left\"\r\n                        onClick={minusQuantity}\r\n                      ></i>\r\n                    </button>\r\n                    <input\r\n                      className=\"form-control border-0 shadow-0 p-0\"\r\n                      type=\"text\"\r\n                      value={quantity}\r\n                      onChange={onChangeText}\r\n                    />\r\n                    <button\r\n                      className=\"inc-btn p-0\"\r\n                      style={{ cursor: \"pointer\" }}\r\n                    >\r\n                      <i\r\n                        className=\"fas fa-caret-right\"\r\n                        onClick={addQuantity}\r\n                      ></i>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-sm-3 pl-sm-0\">\r\n                <a\r\n                  className=\"btn btn-dark btn-sm btn-block d-flex align-items-center justify-content-center px-0 text-white\"\r\n                  onClick={() => handleAddToCart()}\r\n                >\r\n                  Add to cart\r\n                </a>\r\n              </div>\r\n              <br></br>\r\n              <br></br>\r\n            </div>\r\n          </div>\r\n          {/* PRODUCT DETAIL - END */}\r\n        </div>\r\n        {/* PRODUCT IMAGE AND DETAIL - END */}\r\n\r\n        {/* COMMENT FORM - START */}\r\n        {/* <div className=\"form-group\">\r\n          <label htmlFor=\"exampleFormControlTextarea1\">Comment:</label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            rows=\"3\"\r\n            onChange={onChangeComment}\r\n            value={comment}\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"d-flex justify-content-between\">\r\n          <div className=\"d-flex w-25\">\r\n            <span className=\"mt-2\">Evaluate: </span>\r\n            &nbsp; &nbsp;\r\n            <input\r\n              className=\"form-control w-25\"\r\n              type=\"number\"\r\n              min=\"1\"\r\n              max=\"5\"\r\n              value={star}\r\n              onChange={onChangeStar}\r\n            />\r\n            &nbsp; &nbsp;\r\n            <span className=\"mt-2\">Star</span>\r\n          </div>\r\n          <div>\r\n            <a\r\n              className=\"btn btn-dark btn-sm btn-block px-0 text-white\"\r\n              style={{ width: \"12rem\" }}\r\n              onClick={handlerComment}\r\n            >\r\n              Send\r\n            </a>\r\n          </div>\r\n        </div> */}\r\n        {/* COMMENT FORM - END */}\r\n\r\n        <br />\r\n\r\n        {/* DESCRIPTION AND COMMENT - START */}\r\n        <ul className=\"nav nav-tabs border-0\">\r\n          <li className=\"nav-item\">\r\n            <a\r\n              className=\"nav-link fix_comment\"\r\n              onClick={() => handlerReview(\"description\")}\r\n              style={\r\n                review === \"description\"\r\n                  ? { backgroundColor: \"#383838\", color: \"#ffffff\" }\r\n                  : { color: \"#383838\" }\r\n              }\r\n            >\r\n              Description\r\n            </a>\r\n          </li>\r\n          {/* <li className=\"nav-item\">\r\n            <a\r\n              className=\"nav-link fix_comment\"\r\n              onClick={() => handlerReview(\"review\")}\r\n              style={\r\n                review === \"review\"\r\n                  ? { backgroundColor: \"#383838\", color: \"#ffffff\" }\r\n                  : { color: \"#383838\" }\r\n              }\r\n            >\r\n              Reviews\r\n            </a>\r\n          </li> */}\r\n        </ul>\r\n        <div className=\"tab-content mb-5\">\r\n          {review === \"description\" ? (\r\n            <div className=\"tab-pane fade show active\">\r\n              <div className=\"pt-4 pb-4 bg-white\">\r\n                <h6 className=\"text-uppercase\">Product description </h6>\r\n                <br></br>\r\n                <p\r\n                  className=\"text-muted text-small mb-0\"\r\n                  style={{ whiteSpace: \"pre-wrap\" }}\r\n                >\r\n                  {detail.long_desc}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <></>\r\n            // <div className=\"tab-pane fade show active\">\r\n            //   <div className=\"p-4 p-lg-5 bg-white\">\r\n            //     <div className=\"row\">\r\n            //       <div className=\"col-lg-8\">\r\n            //         {list_comment &&\r\n            //           list_comment.map((value) => (\r\n            //             <div className=\"media mb-3\" key={value._id}>\r\n            //               <img\r\n            //                 className=\"rounded-circle\"\r\n            //                 src=\"https://img.icons8.com/color/36/000000/administrator-male.png\"\r\n            //                 alt=\"\"\r\n            //                 width=\"50\"\r\n            //               />\r\n            //               <div className=\"media-body ml-3\">\r\n            //                 <h6 className=\"mb-0 text-uppercase\">\r\n            //                   {value.fullname}\r\n            //                 </h6>\r\n            //                 <p className=\"small text-muted mb-0 text-uppercase\">\r\n            //                   dd/mm/yyyy\r\n            //                 </p>\r\n            //                 <ul className=\"list-inline mb-1 text-xs\">\r\n            //                   <li className=\"list-inline-item m-0\">\r\n            //                     <i className={value.star1}></i>\r\n            //                   </li>\r\n            //                   <li className=\"list-inline-item m-0\">\r\n            //                     <i className={value.star2}></i>\r\n            //                   </li>\r\n            //                   <li className=\"list-inline-item m-0\">\r\n            //                     <i className={value.star3}></i>\r\n            //                   </li>\r\n            //                   <li className=\"list-inline-item m-0\">\r\n            //                     <i className={value.star4}></i>\r\n            //                   </li>\r\n            //                   <li className=\"list-inline-item m-0\">\r\n            //                     <i className={value.star5}></i>\r\n            //                   </li>\r\n            //                 </ul>\r\n            //                 <p className=\"text-small mb-0 text-muted\">\r\n            //                   {value.content}\r\n            //                 </p>\r\n            //               </div>\r\n            //             </div>\r\n            //           ))}\r\n            //       </div>\r\n            //     </div>\r\n            //   </div>\r\n            // </div>\r\n          )}\r\n        </div>\r\n        {/* DESCRIPTION AND COMMENT - END */}\r\n\r\n        {/* RELATED PRODUCTS - START */}\r\n        <h2 className=\"h5 text-uppercase mb-4\">Related products</h2>\r\n        <div className=\"row\">\r\n          {product &&\r\n            product\r\n              .filter(\r\n                (el) => el.category === detail.category && el._id !== detail._id\r\n              )\r\n              .map((value) => (\r\n                <div className=\"col-lg-3 col-sm-6\" key={value._id}>\r\n                  <div className=\"product text-center skel-loader\">\r\n                    <div className=\"d-block mb-3 position-relative\">\r\n                      <img\r\n                        className=\"img-fluid w-100\"\r\n                        src={value.img1}\r\n                        alt=\"...\"\r\n                      />\r\n                      <div className=\"product-overlay\">\r\n                        <ul className=\"mb-0 list-inline\"></ul>\r\n                      </div>\r\n                    </div>\r\n                    <h6>\r\n                      <Link\r\n                        className=\"reset-anchor\"\r\n                        to={`/detail/${value._id}`}\r\n                      >\r\n                        {value.name}\r\n                      </Link>\r\n                    </h6>\r\n                    <p className=\"small text-muted\">\r\n                      {convertMoney(value.price)} VND\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n        </div>\r\n        {/* RELATED PRODUCTS - END */}\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Detail;\r\n","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Shop\\Shop.jsx",["253","254","255","256"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect, useState } from \"react\";\nimport queryString from \"query-string\";\nimport ProductAPI from \"../API/ProductAPI\";\nimport Search from \"./Component/Search\";\nimport Pagination from \"./Component/Pagination\";\nimport Products from \"./Component/Products\";\nimport SortProduct from \"./Component/SortProduct\";\nimport convertMoney from \"../convertMoney\";\n\nfunction Shop(props) {\n  const [products, setProducts] = useState([]);\n  const [temp, setTemp] = useState([]);\n\n  //state dùng để sắp xếp sản phẩm\n  const [sort, setSort] = useState(\"default\");\n\n  //Tổng số trang\n  const [totalPage, setTotalPage] = useState();\n\n  // Get category parram from url by localtion\n  const category =\n    new URLSearchParams(window.location.search).get(\"category\") || \"all\";\n  console.log(category);\n\n  //Từng trang hiện tại\n  const [pagination, setPagination] = useState({\n    page: \"1\",\n    count: \"9\",\n    search: \"\",\n    category: category,\n  });\n\n  //Hàm nà dùng để lấy value từ component SortProduct truyền lên\n  const handlerChangeSort = (value) => {\n    console.log(\"Value: \", value);\n\n    setSort(value);\n  };\n\n  //Hàm này dùng để thay đổi state pagination.page\n  //Nó sẽ truyền xuống Component con và nhận dữ liệu từ Component con truyền lên\n  const handlerChangePage = (value) => {\n    console.log(\"Value: \", value);\n\n    //Sau đó set lại cái pagination để gọi chạy làm useEffect gọi lại API pagination\n    setPagination({\n      page: value,\n      count: pagination.count,\n      search: pagination.search,\n      category: pagination.category,\n    });\n  };\n\n  //Hàm này dùng để thay đổi state pagination.search\n  //Hàm này sẽ truyền xuống Component con và nhận dữ liệu từ Component con truyền lên\n  const handlerSearch = (value) => {\n    console.log(\"Value: \", value);\n\n    setPagination({\n      page: pagination.page,\n      count: pagination.count,\n      search: value,\n      category: pagination.category,\n    });\n  };\n\n  //Hàm này dùng để thay đổi state pagination.category\n  const handlerCategory = (value) => {\n    console.log(\"Value: \", value);\n\n    setPagination({\n      page: pagination.page,\n      count: pagination.count,\n      search: pagination.search,\n      category: value,\n    });\n  };\n\n  //Gọi hàm useEffect tìm tổng số sản phẩm để tính tổng số trang\n  //Và nó phụ thuộc và state pagination\n  useEffect(() => {\n    const fetchAllData = async () => {\n      let response;\n\n      // Nếu mà category === 'all' thì nó sẽ gọi hàm get tất cả sản phẩm\n      // Ngược lại thì nó sẽ gọi hàm pagination và phân loại sản phẩm\n      if (pagination.category === \"all\") {\n        response = await ProductAPI.getAPI();\n        console.log(response);\n      } else {\n        const params = {\n          page: pagination.page,\n          count: pagination.count,\n          search: pagination.search,\n          category: pagination.category,\n        };\n\n        const query = queryString.stringify(params);\n\n        const newQuery = \"?\" + query;\n\n        response = await ProductAPI.getPagination(newQuery);\n        console.log(response);\n      }\n\n      //Tính tổng số trang = tổng số sản phẩm / số lượng sản phẩm 1 trang\n      const totalPage = Math.ceil(\n        parseInt(response.length) / parseInt(pagination.count)\n      );\n      console.log(totalPage);\n\n      setTotalPage(totalPage);\n    };\n\n    fetchAllData();\n  }, [pagination]);\n\n  //Gọi hàm Pagination\n  useEffect(() => {\n    const fetchData = async () => {\n      const params = {\n        page: pagination.page,\n        count: pagination.count,\n        search: pagination.search,\n        category: pagination.category,\n      };\n\n      const query = queryString.stringify(params);\n\n      const newQuery = \"?\" + query;\n\n      const response = await ProductAPI.getPagination(newQuery);\n      console.log(response);\n\n      setProducts(response);\n      setTemp(response);\n    };\n\n    fetchData();\n  }, [pagination]);\n\n  return (\n    <div className=\"container\">\n      <section className=\"py-5 bg-light\">\n        <div className=\"container\">\n          <div className=\"row px-4 px-lg-5 py-lg-4 align-items-center\">\n            <div className=\"col-lg-6\">\n              <h1 className=\"h2 text-uppercase mb-0\">Shop</h1>\n            </div>\n            <div className=\"col-lg-6 text-lg-right\">\n              <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb justify-content-lg-end mb-0 px-0\">\n                  <li className=\"breadcrumb-item active\" aria-current=\"page\">\n                    Shop\n                  </li>\n                </ol>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* -------------Modal Product----------------- */}\n      {products &&\n        products.map((value) => (\n          <div\n            className=\"modal fade show\"\n            id={`product_${value._id}`}\n            key={value._id}\n          >\n            <div\n              className=\"modal-dialog modal-lg modal-dialog-centered\"\n              role=\"document\"\n            >\n              <div className=\"modal-content\">\n                <div className=\"modal-body p-0\">\n                  <div className=\"row align-items-stretch\">\n                    <div className=\"col-lg-6 p-lg-0\">\n                      <img\n                        style={{ width: \"100%\" }}\n                        className=\"product-view d-block h-100 bg-cover bg-center\"\n                        src={value.img1}\n                        data-lightbox={`product_${value._id}`}\n                      />\n                      <img className=\"d-none\" href={value.img2} />\n                      <img className=\"d-none\" href={value.img3} />\n                    </div>\n                    <div className=\"col-lg-6\">\n                      {/* Để tắt modal phải có class=\"close\" và data-dissmiss=\"modal\" và aria-label=\"Close\" */}\n                      <a\n                        className=\"close p-4\"\n                        type=\"button\"\n                        href=\"#section_product\"\n                        data-dismiss=\"modal\"\n                        aria-label=\"Close\"\n                      >\n                        ×\n                      </a>\n                      <div className=\"p-5 my-md-4\">\n                        <ul className=\"list-inline mb-2\">\n                          <li className=\"list-inline-item m-0\">\n                            <i className=\"fas fa-star small text-warning\"></i>\n                          </li>\n                          <li className=\"list-inline-item m-0\">\n                            <i className=\"fas fa-star small text-warning\"></i>\n                          </li>\n                          <li className=\"list-inline-item m-0\">\n                            <i className=\"fas fa-star small text-warning\"></i>\n                          </li>\n                          <li className=\"list-inline-item m-0\">\n                            <i className=\"fas fa-star small text-warning\"></i>\n                          </li>\n                          <li className=\"list-inline-item m-0\">\n                            <i className=\"fas fa-star small text-warning\"></i>\n                          </li>\n                        </ul>\n                        <h2 className=\"h4\">{value.name}</h2>\n                        <p className=\"text-muted\">\n                          {convertMoney(value.price)} VND\n                        </p>\n                        <p className=\"text-small mb-4\">\n                          Lorem ipsum dolor sit amet, consectetur adipiscing\n                          elit. In ut ullamcorper leo, eget euismod orci. Cum\n                          sociis natoque penatibus et magnis dis parturient\n                          montes nascetur ridiculus mus. Vestibulum ultricies\n                          aliquam convallis.\n                        </p>\n                        <div className=\"row align-items-stretch mb-4\">\n                          <div className=\"col-sm-5 pl-sm-0 fix_addwish\">\n                            <a className=\"btn btn-dark btn-sm btn-block h-100 d-flex align-items-center justify-content-center px-0\">\n                              <i className=\"far fa-heart mr-2\"></i>\n                              Add Too Wish List\n                            </a>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      {/* -------------Modal Product----------------- */}\n\n      <section className=\"py-5\">\n        <div className=\"container p-0\">\n          <div className=\"row\">\n            <div className=\"col-lg-3 order-2 order-lg-1\">\n              <h5 className=\"text-uppercase mb-4\">Categories</h5>\n              <div className=\"py-2 px-4 bg-dark text-white mb-3\">\n                <strong className=\"small text-uppercase font-weight-bold\">\n                  Apple\n                </strong>\n              </div>\n              <ul className=\"list-unstyled small text-muted pl-lg-4 font-weight-normal\">\n                <li className=\"mb-2\">\n                  <a\n                    className=\"reset-anchor\"\n                    href=\"#\"\n                    onClick={() => handlerCategory(\"all\")}\n                  >\n                    All\n                  </a>\n                </li>\n              </ul>\n              <div className=\"py-2 px-4 bg-light mb-3\">\n                <strong className=\"small text-uppercase font-weight-bold\">\n                  Iphone & Mac\n                </strong>\n              </div>\n              <ul className=\"list-unstyled small text-muted pl-lg-4 font-weight-normal\">\n                <li className=\"mb-2\">\n                  <a\n                    className=\"reset-anchor\"\n                    href=\"#\"\n                    onClick={() => handlerCategory(\"iphone\")}\n                  >\n                    IPhone\n                  </a>\n                </li>\n                <li className=\"mb-2\">\n                  <a\n                    className=\"reset-anchor\"\n                    href=\"#\"\n                    onClick={() => handlerCategory(\"ipad\")}\n                  >\n                    Ipad\n                  </a>\n                </li>\n                <li className=\"mb-2\">\n                  <a\n                    className=\"reset-anchor\"\n                    href=\"#\"\n                    onClick={() => handlerCategory(\"macbook\")}\n                  >\n                    Macbook\n                  </a>\n                </li>\n              </ul>\n              <div className=\"py-2 px-4 bg-light mb-3\">\n                <strong className=\"small text-uppercase font-weight-bold\">\n                  Wireless\n                </strong>\n              </div>\n              <ul className=\"list-unstyled small text-muted pl-lg-4 font-weight-normal\">\n                <li className=\"mb-2\">\n                  <a\n                    className=\"reset-anchor\"\n                    href=\"#\"\n                    onClick={() => handlerCategory(\"airpod\")}\n                  >\n                    Airpod\n                  </a>\n                </li>\n                <li className=\"mb-2\">\n                  <a\n                    className=\"reset-anchor\"\n                    href=\"#\"\n                    onClick={() => handlerCategory(\"watch\")}\n                  >\n                    Watch\n                  </a>\n                </li>\n              </ul>\n              <div className=\"py-2 px-4 bg-light mb-3\">\n                <strong className=\"small text-uppercase font-weight-bold\">\n                  Other\n                </strong>\n              </div>\n              <ul className=\"list-unstyled small text-muted pl-lg-4 font-weight-normal mb-5\">\n                <li className=\"mb-2\">\n                  <a\n                    className=\"reset-anchor\"\n                    href=\"#\"\n                    onClick={() => handlerCategory(\"mouse\")}\n                  >\n                    Mouse\n                  </a>\n                </li>\n                <li className=\"mb-2\">\n                  <a\n                    className=\"reset-anchor\"\n                    href=\"#\"\n                    onClick={() => handlerCategory(\"keyboard\")}\n                  >\n                    Keyboard\n                  </a>\n                </li>\n                <li className=\"mb-2\">\n                  <a\n                    className=\"reset-anchor\"\n                    href=\"#\"\n                    onClick={() => handlerCategory(\"other\")}\n                  >\n                    Other\n                  </a>\n                </li>\n              </ul>\n            </div>\n            <div className=\"col-lg-9 order-1 order-lg-2 mb-5 mb-lg-0\">\n              <div className=\"row mb-3 align-items-center\">\n                {/* ------------------Search----------------- */}\n                <Search handlerSearch={handlerSearch} />\n                {/* ------------------Search----------------- */}\n\n                <div className=\"col-lg-8\">\n                  <ul className=\"list-inline d-flex align-items-center justify-content-lg-end mb-0\">\n                    <li className=\"list-inline-item\">\n                      <SortProduct handlerChangeSort={handlerChangeSort} />\n                    </li>\n                  </ul>\n                </div>\n              </div>\n\n              <Products products={products} sort={sort} />\n\n              <Pagination\n                pagination={pagination}\n                handlerChangePage={handlerChangePage}\n                totalPage={totalPage}\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default Shop;\n","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Share\\Header\\Header.jsx",[],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Share\\Footer\\Footer.jsx",[],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Share\\Chat\\Chat.jsx",["257","258","259"],"import React, { useEffect, useState } from \"react\";\nimport \"./Chat.css\";\n// import queryString from \"query-string\";\n\nimport ChatRoomsAPI from \"../../API/ChatRoomsAPI\";\n// import { useSelector } from \"react-redux\";\n\n// import io from \"socket.io-client\";\n// const socket = io(\"http://54.254.177.24:5000\", { transports: [\"websocket\"] });\n\nfunction Chat(props) {\n  const [activeChat, setActiveChat] = useState(false);\n  const [textMessage, setTextMessage] = useState(\"\");\n  const [message, setMessage] = useState();\n  const [roomId, setRoomId] = useState(\n    localStorage.getItem(\"njs_asm3_roomId\") || \"\"\n  );\n\n  //Get id_user từ redux khi user đã đăng nhập\n  const [load, setLoad] = useState(false);\n\n  // Hàm này dùng để mở hộp thoại chat\n  const onChat = () => {\n    setActiveChat(!activeChat);\n  };\n\n  const onChangeText = (e) => {\n    setTextMessage(e.target.value);\n  };\n\n  const handlerSend = async () => {\n    //Sau đó nó emit dữ liệu lên server bằng socket với key send_message và value data\n\n    // Check if text equal \"/end\" then end room\n    if (roomId && textMessage.toLowerCase() === \"/end\") {\n      await ChatRoomsAPI.addMessage({\n        message: \"==END ROOM==\",\n        roomId: roomId,\n        is_admin: false,\n      });\n\n      localStorage.removeItem(\"njs_asm3_roomId\");\n      setTextMessage(\"\");\n      setRoomId(\"\");\n      setMessage([]);\n      setActiveChat(false);\n\n      return;\n    }\n\n    // Check if roomId is null then create new Room\n    if (!roomId) {\n      const newRoomData = await ChatRoomsAPI.createNewRoom();\n      setRoomId(newRoomData._id);\n      localStorage.setItem(\"njs_asm3_roomId\", newRoomData._id);\n    }\n\n    const data = {\n      message: textMessage,\n      roomId: roomId,\n      is_admin: false,\n    };\n\n    //Tiếp theo nó sẽ postdata lên api đưa dữ liệu vào database\n    await ChatRoomsAPI.addMessage(data);\n    setTextMessage(\"\");\n\n    // setTimeout(() => {\n    //   setLoad(true);\n    //   socket.emit(\"send_message\", data);\n    // }, 200);\n  };\n\n  const fetchData = async () => {\n    const response = await ChatRoomsAPI.getMessageByRoomId(roomId);\n    setMessage(response.content);\n  };\n\n  // Hàm này dùng để load dữ liệu message của user khi user gửi tin nhán\n  useEffect(() => {\n    if (load) {\n      fetchData();\n      setLoad(false);\n    }\n  }, [load]);\n\n  useEffect(() => {\n    setLoad(true);\n  }, [roomId]);\n\n  //Hàm này dùng để nhận socket từ server gửi lên\n  // useEffect(() => {\n  //   //Nhận dữ liệu từ server gửi lên thông qua socket với key receive_message\n  //   socket.on(\"receive_message\", (data) => {\n  //     //Sau đó nó sẽ setLoad gọi lại hàm useEffect lấy lại dữ liệu\n  //     setLoad(true);\n  //   });\n  // }, []);\n\n  return (\n    <div className=\"wrapper_chat\">\n      <div className=\"chat_messenger\" onClick={onChat}>\n        <svg x=\"0\" y=\"0\" width=\"60px\" height=\"60px\">\n          <g stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n            <g>\n              <circle fill=\"#383838\" cx=\"30\" cy=\"30\" r=\"30\"></circle>\n              <svg x=\"10\" y=\"10\">\n                <g transform=\"translate(0.000000, -10.000000)\" fill=\"#FFFFFF\">\n                  <g id=\"logo\" transform=\"translate(0.000000, 10.000000)\">\n                    <path\n                      d=\"M20,0 C31.2666,0 40,8.2528 40,19.4 C40,30.5472 31.2666,38.8 \n\t\t\t\t\t\t\t\t20,38.8 C17.9763,38.8 16.0348,38.5327 14.2106,38.0311 C13.856,37.9335 13.4789,37.9612 \n\t\t\t\t\t\t\t\t13.1424,38.1098 L9.1727,39.8621 C8.1343,40.3205 6.9621,39.5819 6.9273,38.4474 L6.8184,34.8894 \n\t\t\t\t\t\t\t\tC6.805,34.4513 6.6078,34.0414 6.2811,33.7492 C2.3896,30.2691 0,25.2307 0,19.4 C0,8.2528 8.7334,0 \n\t\t\t\t\t\t\t\t20,0 Z M7.99009,25.07344 C7.42629,25.96794 8.52579,26.97594 9.36809,26.33674 L15.67879,21.54734 \n\t\t\t\t\t\t\t\tC16.10569,21.22334 16.69559,21.22164 17.12429,21.54314 L21.79709,25.04774 C23.19919,26.09944 \n\t\t\t\t\t\t\t\t25.20039,25.73014 26.13499,24.24744 L32.00999,14.92654 C32.57369,14.03204 31.47419,13.02404 \n\t\t\t\t\t\t\t\t30.63189,13.66324 L24.32119,18.45264 C23.89429,18.77664 23.30439,18.77834 22.87569,18.45674 \n\t\t\t\t\t\t\t\tL18.20299,14.95224 C16.80079,13.90064 14.79959,14.26984 13.86509,15.75264 L7.99009,25.07344 Z\"\n                    ></path>\n                  </g>\n                </g>\n              </svg>\n            </g>\n          </g>\n        </svg>\n      </div>\n\n      {activeChat && (\n        <div className=\"active_chat animate__animated animate__jackInTheBox\">\n          <div style={{ width: \"100%\" }}>\n            <div\n              className=\"card card-bordered fix_boderChat\"\n              style={{ width: \"fit-content\" }}\n            >\n              <div className=\"card-header\">\n                <h4 className=\"card-title\">\n                  <strong>Customer Support</strong>\n                </h4>{\" \"}\n                <a className=\"btn btn-xs btn-secondary\" href=\"#\">\n                  Let's Chat App\n                </a>\n              </div>\n              <div className=\"ps-container ps-theme-default ps-active-y fix_scoll\">\n                {message &&\n                  message.map((value) =>\n                    !value.is_admin ? (\n                      <div\n                        className=\"media media-chat media-chat-reverse\"\n                        key={value.id}\n                      >\n                        <div className=\"media-body\">\n                          <p>You: {value.message}</p>\n                        </div>\n                      </div>\n                    ) : (\n                      <div className=\"media media-chat\" key={value.id}>\n                        {\" \"}\n                        <img\n                          className=\"avatar\"\n                          src=\"https://img.icons8.com/color/36/000000/administrator-male.png\"\n                          alt=\"...\"\n                        />\n                        <div className=\"media-body\" key={value.id}>\n                          <p>Cộng tác viên: {value.message}</p>\n                        </div>\n                      </div>\n                    )\n                  )}\n              </div>\n              <div className=\"publisher bt-1 border-light\">\n                <img\n                  className=\"avatar avatar-xs\"\n                  src=\"https://img.icons8.com/color/36/000000/administrator-male.png\"\n                  alt=\"...\"\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"Enter Message!\"\n                  onChange={onChangeText}\n                  value={textMessage}\n                  style={{ width: \"80%\" }}\n                  onKeyPress={(e) => {\n                    if (e.key === \"Enter\") {\n                      handlerSend();\n                    }\n                  }}\n                />\n                <a\n                  onClick={handlerSend}\n                  className=\"publisher-btn text-info\"\n                  data-abc=\"true\"\n                >\n                  <i className=\"fa fa-paper-plane\"></i>\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Chat;\n","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\convertMoney.js",[],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Authentication\\Name.jsx",["260","261"],"import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// import UserAPI from \"../API/UserAPI\";\r\n\r\nfunction Name(props) {\r\n  const [name, setName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    // const fetchData = async () => {\r\n    // \tconst response = await UserAPI.getDetailData(\r\n    // \t\tlocalStorage.getItem('id_user')\r\n    // \t);\r\n    // \tsetName(response);\r\n    // };\r\n    // fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <li className=\"nav-item dropdown\">\r\n      <a\r\n        className=\"nav-link dropdown-toggle\"\r\n        style={{ cursor: \"pointer\" }}\r\n        id=\"pagesDropdown\"\r\n        data-toggle=\"dropdown\"\r\n        aria-haspopup=\"true\"\r\n        aria-expanded=\"false\"\r\n      >\r\n        <i className=\"fas fa-user-alt mr-1 text-gray\"></i>\r\n        {name.fullname}\r\n      </a>\r\n      <div className=\"dropdown-menu mt-3\" aria-labelledby=\"pagesDropdown\">\r\n        {/* <Link\r\n\t\t\t\t\tclassName='dropdown-item border-0 transition-link'\r\n\t\t\t\t\tto={'/manage'}>\r\n\t\t\t\t\tManage\r\n\t\t\t\t</Link> */}\r\n        <Link\r\n          className=\"dropdown-item border-0 transition-link\"\r\n          to={\"/history\"}\r\n        >\r\n          History\r\n        </Link>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Name;\r\n","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Authentication\\LogoutLink.jsx",[],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Authentication\\LoginLink.jsx",[],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\API\\UserAPI.jsx",[],["262","263"],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\API\\ProductAPI.jsx",[],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\API\\MessengerAPI.jsx",[],["264","265"],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\API\\CartAPI.jsx",[],["266","267"],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\API\\CommentAPI.jsx",[],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\API\\CheckoutAPI.jsx",[],["268","269"],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Cart\\Component\\ListCart.jsx",["270"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport convertMoney from \"../../convertMoney\";\n\nListCart.propTypes = {\n  cartItems: PropTypes.array,\n  deleteCartItem: PropTypes.func,\n  changeQuantity: PropTypes.func,\n};\n\nListCart.defaultProps = {\n  cartItems: [],\n  deleteCartItem: null,\n  changeQuantity: null,\n};\n\nfunction ListCart(props) {\n  const { cartItems, deleteCartItem, changeQuantity } = props;\n\n  const handlerQuantityChange = (e) => {\n    console.log(e.target.item);\n  };\n\n  const deleteItem = (productId) => {\n    if (!deleteCartItem) {\n      return;\n    }\n    deleteCartItem(productId);\n  };\n\n  const reduceQuantity = (productId, quantity) => {\n    if (!changeQuantity) {\n      return;\n    }\n    if (quantity === 1) {\n      return;\n    }\n    //Trước khi trả dữ liệu về component cha thì phải thay đổi biến count\n    const updatedQuantity = parseInt(quantity) - 1;\n    changeQuantity(productId, updatedQuantity);\n  };\n\n  const addQuantity = (productId, quantity) => {\n    if (!changeQuantity) {\n      return;\n    }\n    const updatedQuantity = parseInt(quantity) + 1;\n    changeQuantity(productId, updatedQuantity);\n  };\n\n  return (\n    <div className=\"table-responsive mb-4\">\n      <table className=\"table\">\n        <thead className=\"bg-light\">\n          <tr className=\"text-center\">\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Image</strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Product</strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Price</strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Quantity</strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Total</strong>\n            </th>\n            <th className=\"border-0\" scope=\"col\">\n              {\" \"}\n              <strong className=\"text-small text-uppercase\">Remove</strong>\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {cartItems &&\n            cartItems.map((item, index) => (\n              <tr className=\"text-center\" key={index}>\n                {/* IMAGE - START */}\n                <td className=\"pl-0 border-0\">\n                  <div className=\"media align-items-center justify-content-center\">\n                    <Link\n                      className=\"reset-anchor d-block animsition-link\"\n                      to={`/detail/${item.idProduct}`}\n                    >\n                      <img src={item.img} alt=\"...\" width=\"70\" />\n                    </Link>\n                  </div>\n                </td>\n                {/* IMAGE - END */}\n                {/* PRODUCT NAME - START */}\n                <td className=\"align-middle border-0\">\n                  <div className=\"media align-items-center justify-content-center\">\n                    <Link\n                      className=\"reset-anchor h6 animsition-link\"\n                      to={`/detail/${item.idProduct}`}\n                    >\n                      {item.productName}\n                    </Link>\n                  </div>\n                </td>\n                {/* PRODUCT NAME - END */}\n                {/* PRICE - START */}\n                <td className=\"align-middle border-0\">\n                  <p className=\"mb-0 small\">{convertMoney(item.price)} VND</p>\n                </td>\n                {/* PRICE - END */}\n                {/* QUANTITY - START */}\n                <td className=\"align-middle border-0\">\n                  <div className=\"quantity justify-content-center\">\n                    <button\n                      className=\"dec-btn p-0\"\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() =>\n                        reduceQuantity(item.productId, item.quantity)\n                      }\n                    >\n                      <i className=\"fas fa-caret-left\"></i>\n                    </button>\n                    <input\n                      className=\"form-control form-control-sm border-0 shadow-0 p-0\"\n                      type=\"text\"\n                      value={item.quantity}\n                      onChange={handlerQuantityChange}\n                    />\n                    <button\n                      className=\"inc-btn p-0\"\n                      style={{ cursor: \"pointer\" }}\n                      onClick={() => addQuantity(item.productId, item.quantity)}\n                    >\n                      <i className=\"fas fa-caret-right\"></i>\n                    </button>\n                  </div>\n                </td>\n                {/* QUANTITY - END */}\n                {/* TOTAL PRICE - START */}\n                <td className=\"align-middle border-0\">\n                  <p className=\"mb-0 small\">\n                    {convertMoney(\n                      parseInt(item.price) * parseInt(item.quantity)\n                    )}{\" \"}\n                  </p>\n                </td>\n                {/* TOTAL PRICE - END */}\n                {/* REMOVE PRODUCT BUTTON - START */}\n                <td className=\"align-middle border-0\">\n                  <a\n                    className=\"reset-anchor remove_cart\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={() => deleteItem(item.productId)}\n                  >\n                    <i className=\"fas fa-trash-alt small text-muted\"></i>\n                  </a>\n                </td>\n                {/* REMOVE PRODUCT BUTTON - END */}\n              </tr>\n            ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default ListCart;\n","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Share\\img\\Image.jsx",[],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Shop\\Component\\Search.jsx",[],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Shop\\Component\\Products.jsx",[],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Shop\\Component\\Pagination.jsx",[],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Shop\\Component\\SortProduct.jsx",[],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\API\\ChatRoomsAPI.jsx",[],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\API\\HistoryAPI.jsx",[],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\API\\axiosClient.jsx",["271","272"],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Shop\\Component\\IndexPage.jsx",["273"],"import React from 'react';\nimport PropTypes from 'prop-types';\n\nIndexPage.propTypes = {\n\tindexPage: PropTypes.array,\n\thandlerChangePage: PropTypes.func,\n\tpagination: PropTypes.object,\n};\n\nIndexPage.defaultProps = {\n\tindexPage: null,\n\thandlerChangePage: null,\n\tpagination: {},\n};\n\nfunction IndexPage(props) {\n\tconst { indexPage, handlerChangePage, pagination } = props;\n\n\tconst { page } = pagination;\n\n\tconst onIndexPage = (value) => {\n\t\tif (!handlerChangePage) {\n\t\t\treturn;\n\t\t}\n\n\t\thandlerChangePage(value);\n\t};\n\n\tconsole.log(indexPage);\n\n\treturn (\n\t\t<div className='d-flex'>\n\t\t\t{indexPage &&\n\t\t\t\tindexPage.map((value) => (\n\t\t\t\t\t<li\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tvalue === parseInt(page) ? 'page-item active' : 'page-item'\n\t\t\t\t\t\t}\n\t\t\t\t\t\tkey={value}\n\t\t\t\t\t\tonClick={() => onIndexPage(value)}>\n\t\t\t\t\t\t<a className='page-link'>{value}</a>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t</div>\n\t);\n}\n\nexport default IndexPage;\n","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Redux\\Actions\\productAction.js",[],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Redux\\Reducers\\userReducer.js",[],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Redux\\Actions\\userAction.js",[],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Redux\\Services\\UserService.js",[],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Redux\\Services\\ProductService.js",["274"],"import { baseService } from \"./baseService\";\r\n\r\nexport class ProductService extends baseService {\r\n  constructor() {\r\n    super();\r\n  }\r\n  getAllProduct = () => {\r\n    return this.get(\"/product/getAllProducts\");\r\n  };\r\n  getProductDetail = (id) => {\r\n    return this.get(`/product/getProductDetail?id=${id}`);\r\n  };\r\n}\r\n\r\nexport const productService = new ProductService();\r\n","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Redux\\storeConfig.js",[],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Redux\\Actions\\Types\\userType.js",[],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Redux\\Actions\\index.js",[],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Redux\\Services\\baseService.js",[],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Redux\\path.js",[],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Redux\\Actions\\cartAction.js",["275","276"],"import { CART } from \"./Types/cartType\";\r\nimport { createAction } from \".\";\r\nimport { cartService } from \"../Services/cartService\";\r\n\r\nexport const addToCart = async (data) => {\r\n  try {\r\n    await cartService.addToCart(data);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getCart = async (userId) => {\r\n  try {\r\n    const result = await cartService.getCartByUserId(userId);\r\n    // console.log(\"result:\", result);\r\n    return result.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const updateQuantity = async (data) => {\r\n  try {\r\n    await cartService.updateQuantity(data);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const deleteItem = async (userId, productId) => {\r\n  try {\r\n    await cartService.deleteItem(userId, productId);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const resetCart = (dispatch) => {\r\n  try {\r\n    // dispatch(createAction(CART.RESET_CART));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Redux\\Actions\\Types\\cartType.js",[],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Redux\\Actions\\orderAction.js",[],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Redux\\Services\\OrderService.js",["277"],"import { baseService } from \"./baseService\";\r\n\r\nexport class OrderService extends baseService {\r\n  constructor() {\r\n    super();\r\n  }\r\n  createOrder = (data) => {\r\n    return this.post(\"/order/create\", data);\r\n  };\r\n  getAllOrder = (id) => {\r\n    return this.get(`/order/get-all-order?userId=${id}`);\r\n  };\r\n  getOrderById = (id) => {\r\n    return this.get(`/order/get-order-by-id?id=${id}`);\r\n  };\r\n}\r\n\r\nexport const orderService = new OrderService();\r\n","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\Redux\\Services\\cartService.js",[],"F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\History\\DetailHistory.jsx",["278","279"],"import React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport convertMoney from \"../convertMoney\";\n\nimport HistoryAPI from \"../API/HistoryAPI\";\n\nimport { getOrderById } from \"../Redux/Actions/orderAction\";\n\nfunction DetailHistory() {\n  const { id } = useParams();\n\n  const [cart, setCart] = useState([]);\n  const [totalPrice, setTotalPrice] = useState();\n  const [userInfo, setUserInfo] = useState({});\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await getOrderById(id);\n      console.log(\"response:\", response);\n\n      setCart(response.products);\n      setTotalPrice(response.totalPrice);\n      setUserInfo(response.user);\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <section className=\"py-5 bg-light\">\n        <div className=\"container\">\n          <div className=\"row px-4 px-lg-5 py-lg-4 align-items-center\">\n            <div className=\"col-lg-6\">\n              <h1 className=\"h2 text-uppercase mb-0\">Detail Order</h1>\n            </div>\n            <div className=\"col-lg-6 text-lg-right\">\n              <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb justify-content-lg-end mb-0 px-0\">\n                  <li className=\"breadcrumb-item active\">Detail</li>\n                </ol>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <div className=\"p-5\">\n        <h1 className=\"h2 text-uppercase\">user Info Order</h1>\n        <p>\n          <strong>ID User: {userInfo.userId}</strong>\n        </p>\n        <p>\n          <strong>Full Name: {userInfo.fullname}</strong>\n        </p>\n        <p>\n          <strong>Phone: {userInfo.phone}</strong>\n        </p>\n        <p>\n          <strong>Address: {userInfo.address}</strong>\n        </p>\n        <p>\n          <strong>Total: {convertMoney(totalPrice)} VND</strong>\n        </p>\n      </div>\n\n      <div className=\"table-responsive pt-5 pb-5\">\n        <table className=\"table\">\n          <thead className=\"bg-light\">\n            <tr className=\"text-center\">\n              <th className=\"border-0\" scope=\"col\">\n                {\" \"}\n                <strong className=\"text-small text-uppercase\">\n                  ID Product\n                </strong>\n              </th>\n              <th className=\"border-0\" scope=\"col\">\n                {\" \"}\n                <strong className=\"text-small text-uppercase\">Image</strong>\n              </th>\n              <th className=\"border-0\" scope=\"col\">\n                {\" \"}\n                <strong className=\"text-small text-uppercase\">Name</strong>\n              </th>\n              <th className=\"border-0\" scope=\"col\">\n                {\" \"}\n                <strong className=\"text-small text-uppercase\">Price</strong>\n              </th>\n              <th className=\"border-0\" scope=\"col\">\n                {\" \"}\n                <strong className=\"text-small text-uppercase\">Count</strong>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {cart &&\n              cart.map((value) => (\n                <tr className=\"text-center\" key={value.idProduct}>\n                  <td className=\"align-middle border-0\">\n                    <h6 className=\"mb-0\">{value.productId}</h6>\n                  </td>\n                  <td className=\"pl-0 border-0\">\n                    <div className=\"media align-items-center justify-content-center\">\n                      <Link\n                        className=\"reset-anchor d-block animsition-link\"\n                        to={`/detail/${value.idProduct}`}\n                      >\n                        <img src={value.img} alt=\"...\" width=\"200\" />\n                      </Link>\n                    </div>\n                  </td>\n                  <td className=\"align-middle border-0\">\n                    <h6 className=\"mb-0\">{value.productName}</h6>\n                  </td>\n                  <td className=\"align-middle border-0\">\n                    <h6 className=\"mb-0\">{value.price}</h6>\n                  </td>\n                  <td className=\"align-middle border-0\">\n                    <h6 className=\"mb-0\">{value.quantity}</h6>\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default DetailHistory;\n","F:\\Funix\\Mon_5_NodeJS\\BT\\asm3\\eshop-fe\\src\\History\\MainHistory.jsx",["280","281","282"],"import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport HistoryAPI from \"../API/HistoryAPI\";\nimport queryString from \"query-string\";\n\nimport { getAllOrder } from \"../Redux/Actions/orderAction\";\nMainHistory.propTypes = {};\n\nfunction MainHistory() {\n  const [orderList, setOrderList] = useState([]);\n  const userId = useSelector((state) => state.user.userId);\n  const navigate = useNavigate();\n  if (userId === \"\") {\n    navigate(\"/\");\n  }\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await getAllOrder(userId);\n      console.log(\"respone:\", response);\n      setOrderList(response);\n    };\n\n    fetchData();\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <section className=\"py-5 bg-light\">\n        <div className=\"container\">\n          <div className=\"row px-4 px-lg-5 py-lg-4 align-items-center\">\n            <div className=\"col-lg-6\">\n              <h1 className=\"h2 text-uppercase mb-0\">History</h1>\n            </div>\n            <div className=\"col-lg-6 text-lg-right\">\n              <nav aria-label=\"breadcrumb\">\n                <ol className=\"breadcrumb justify-content-lg-end mb-0 px-0\">\n                  <li className=\"breadcrumb-item active\">History</li>\n                </ol>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <div className=\"table-responsive pt-5 pb-5\">\n        <table className=\"table\">\n          <thead className=\"bg-light\">\n            <tr className=\"text-center\">\n              <th className=\"border-0\" scope=\"col\">\n                {\" \"}\n                <strong className=\"text-small text-uppercase\">ID Order</strong>\n              </th>\n              <th className=\"border-0\" scope=\"col\">\n                {\" \"}\n                <strong className=\"text-small text-uppercase\">Name</strong>\n              </th>\n              <th className=\"border-0\" scope=\"col\">\n                {\" \"}\n                <strong className=\"text-small text-uppercase\">Phone</strong>\n              </th>\n              <th className=\"border-0\" scope=\"col\">\n                {\" \"}\n                <strong className=\"text-small text-uppercase\">Address</strong>\n              </th>\n              <th className=\"border-0\" scope=\"col\">\n                {\" \"}\n                <strong className=\"text-small text-uppercase\">Total</strong>\n              </th>\n              <th className=\"border-0\" scope=\"col\">\n                {\" \"}\n                <strong className=\"text-small text-uppercase\">Delivery</strong>\n              </th>\n              <th className=\"border-0\" scope=\"col\">\n                {\" \"}\n                <strong className=\"text-small text-uppercase\">Status</strong>\n              </th>\n              <th className=\"border-0\" scope=\"col\">\n                {\" \"}\n                <strong className=\"text-small text-uppercase\">Detail</strong>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {orderList &&\n              orderList.map((order) => (\n                <tr className=\"text-center\" key={order._id}>\n                  <td className=\"align-middle border-0\">\n                    <p className=\"mb-0 small\">{order._id}</p>\n                  </td>\n                  <td className=\"align-middle border-0\">\n                    <p className=\"mb-0 small\">{order.user.fullname}</p>\n                  </td>\n                  <td className=\"align-middle border-0\">\n                    <p className=\"mb-0 small\">{order.user.phone}</p>\n                  </td>\n                  <td className=\"align-middle border-0\">\n                    <p className=\"mb-0 small\">{order.user.address}</p>\n                  </td>\n                  <td className=\"align-middle border-0\">\n                    <p className=\"mb-0 small\">${order.totalPrice}</p>\n                  </td>\n                  <td className=\"align-middle border-0\">\n                    <p className=\"mb-0 small\">\n                      {order.delivery ? \"Waiting for progressing\" : \"Processed\"}\n                    </p>\n                  </td>\n                  <td className=\"align-middle border-0\">\n                    <p className=\"mb-0 small\">\n                      {order.status ? \"Waiting for pay\" : order.status}\n                    </p>\n                  </td>\n                  <td className=\"align-middle border-0\">\n                    <Link\n                      className=\"btn btn-outline-dark btn-sm\"\n                      to={`/history/${order._id}`}\n                    >\n                      View\n                      <i className=\"fas fa-long-arrow-alt-right ml-2\"></i>\n                    </Link>\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default MainHistory;\n",{"ruleId":"283","replacedBy":"284"},{"ruleId":"285","replacedBy":"286"},{"ruleId":"283","replacedBy":"287"},{"ruleId":"285","replacedBy":"288"},{"ruleId":"289","severity":1,"message":"290","line":2,"column":10,"nodeType":"291","messageId":"292","endLine":2,"endColumn":21},{"ruleId":"293","severity":1,"message":"294","line":40,"column":6,"nodeType":"295","endLine":40,"endColumn":8,"suggestions":"296"},{"ruleId":"289","severity":1,"message":"297","line":1,"column":17,"nodeType":"291","messageId":"292","endLine":1,"endColumn":26},{"ruleId":"289","severity":1,"message":"298","line":12,"column":10,"nodeType":"291","messageId":"292","endLine":12,"endColumn":14},{"ruleId":"289","severity":1,"message":"299","line":12,"column":16,"nodeType":"291","messageId":"292","endLine":12,"endColumn":23},{"ruleId":"293","severity":1,"message":"300","line":29,"column":6,"nodeType":"295","endLine":29,"endColumn":8,"suggestions":"301"},{"ruleId":"302","severity":1,"message":"303","line":49,"column":25,"nodeType":"304","endLine":54,"endColumn":27},{"ruleId":"302","severity":1,"message":"303","line":55,"column":25,"nodeType":"304","endLine":55,"endColumn":69},{"ruleId":"302","severity":1,"message":"303","line":56,"column":25,"nodeType":"304","endLine":56,"endColumn":69},{"ruleId":"305","severity":1,"message":"306","line":78,"column":31,"nodeType":"304","messageId":"307","endLine":82,"endColumn":32,"fix":"308"},{"ruleId":"289","severity":1,"message":"309","line":26,"column":10,"nodeType":"291","messageId":"292","endLine":26,"endColumn":17},{"ruleId":"289","severity":1,"message":"310","line":32,"column":19,"nodeType":"291","messageId":"292","endLine":32,"endColumn":29},{"ruleId":"289","severity":1,"message":"311","line":33,"column":16,"nodeType":"291","messageId":"292","endLine":33,"endColumn":23},{"ruleId":"293","severity":1,"message":"312","line":66,"column":6,"nodeType":"295","endLine":66,"endColumn":8,"suggestions":"313"},{"ruleId":"314","severity":1,"message":"315","line":311,"column":23,"nodeType":"304","endLine":316,"endColumn":24},{"ruleId":"289","severity":1,"message":"316","line":23,"column":9,"nodeType":"291","messageId":"292","endLine":23,"endColumn":17},{"ruleId":"314","severity":1,"message":"315","line":310,"column":17,"nodeType":"304","endLine":310,"endColumn":50},{"ruleId":"314","severity":1,"message":"315","line":348,"column":17,"nodeType":"304","endLine":351,"endColumn":18},{"ruleId":"314","severity":1,"message":"315","line":405,"column":13,"nodeType":"304","endLine":413,"endColumn":14},{"ruleId":"289","severity":1,"message":"317","line":13,"column":10,"nodeType":"291","messageId":"292","endLine":13,"endColumn":14},{"ruleId":"302","severity":1,"message":"303","line":180,"column":23,"nodeType":"304","endLine":185,"endColumn":25},{"ruleId":"302","severity":1,"message":"303","line":186,"column":23,"nodeType":"304","endLine":186,"endColumn":67},{"ruleId":"302","severity":1,"message":"303","line":187,"column":23,"nodeType":"304","endLine":187,"endColumn":67},{"ruleId":"293","severity":1,"message":"318","line":85,"column":6,"nodeType":"295","endLine":85,"endColumn":12,"suggestions":"319"},{"ruleId":"314","severity":1,"message":"320","line":140,"column":17,"nodeType":"304","endLine":140,"endColumn":66},{"ruleId":"314","severity":1,"message":"315","line":189,"column":17,"nodeType":"304","endLine":193,"endColumn":18},{"ruleId":"289","severity":1,"message":"321","line":6,"column":16,"nodeType":"291","messageId":"292","endLine":6,"endColumn":23},{"ruleId":"314","severity":1,"message":"315","line":20,"column":7,"nodeType":"304","endLine":27,"endColumn":8},{"ruleId":"283","replacedBy":"322"},{"ruleId":"285","replacedBy":"323"},{"ruleId":"283","replacedBy":"324"},{"ruleId":"285","replacedBy":"325"},{"ruleId":"283","replacedBy":"326"},{"ruleId":"285","replacedBy":"327"},{"ruleId":"283","replacedBy":"328"},{"ruleId":"285","replacedBy":"329"},{"ruleId":"314","severity":1,"message":"315","line":155,"column":19,"nodeType":"304","endLine":159,"endColumn":20},{"ruleId":"289","severity":1,"message":"330","line":2,"column":8,"nodeType":"291","messageId":"292","endLine":2,"endColumn":13},{"ruleId":"289","severity":1,"message":"331","line":3,"column":8,"nodeType":"291","messageId":"292","endLine":3,"endColumn":19},{"ruleId":"314","severity":1,"message":"315","line":41,"column":7,"nodeType":"304","endLine":41,"endColumn":32},{"ruleId":"332","severity":1,"message":"333","line":4,"column":3,"nodeType":"334","messageId":"335","endLine":6,"endColumn":4},{"ruleId":"289","severity":1,"message":"336","line":1,"column":10,"nodeType":"291","messageId":"292","endLine":1,"endColumn":14},{"ruleId":"289","severity":1,"message":"337","line":2,"column":10,"nodeType":"291","messageId":"292","endLine":2,"endColumn":22},{"ruleId":"332","severity":1,"message":"333","line":4,"column":3,"nodeType":"334","messageId":"335","endLine":6,"endColumn":4},{"ruleId":"289","severity":1,"message":"338","line":5,"column":8,"nodeType":"291","messageId":"292","endLine":5,"endColumn":18},{"ruleId":"293","severity":1,"message":"339","line":27,"column":6,"nodeType":"295","endLine":27,"endColumn":8,"suggestions":"340"},{"ruleId":"289","severity":1,"message":"338","line":4,"column":8,"nodeType":"291","messageId":"292","endLine":4,"endColumn":18},{"ruleId":"289","severity":1,"message":"331","line":5,"column":8,"nodeType":"291","messageId":"292","endLine":5,"endColumn":19},{"ruleId":"293","severity":1,"message":"341","line":26,"column":6,"nodeType":"295","endLine":26,"endColumn":8,"suggestions":"342"},"no-native-reassign",["343"],"no-negated-in-lhs",["344"],["343"],["344"],"no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCartByUserId'. Either include it or remove the dependency array.","ArrayExpression",["345"],"'useEffect' is defined but never used.","'user' is assigned a value but never used.","'setUser' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["346"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","noTargetBlankWithoutNoreferrer",{"range":"347","text":"348"},"'success' is assigned a value but never used.","'setSuccess' is assigned a value but never used.","'setLoad' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getCartByUserId' and 'userId'. Either include them or remove the dependency array.",["349"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'dispatch' is assigned a value but never used.","'temp' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.",["350"],"The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'setName' is assigned a value but never used.",["343"],["344"],["343"],["344"],["343"],["344"],["343"],["344"],"'axios' is defined but never used.","'queryString' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'CART' is defined but never used.","'createAction' is defined but never used.","'HistoryAPI' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["351"],"React Hook useEffect has a missing dependency: 'userId'. Either include it or remove the dependency array.",["352"],"no-global-assign","no-unsafe-negation",{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},[3350,3350]," rel=\"noreferrer\"",{"desc":"357","fix":"358"},{"desc":"359","fix":"360"},{"desc":"361","fix":"362"},{"desc":"363","fix":"364"},"Update the dependencies array to be: [getCartByUserId]",{"range":"365","text":"366"},"Update the dependencies array to be: [dispatch]",{"range":"367","text":"368"},"Update the dependencies array to be: [getCartByUserId, userId]",{"range":"369","text":"370"},"Update the dependencies array to be: [fetchData, load]",{"range":"371","text":"372"},"Update the dependencies array to be: [id]",{"range":"373","text":"374"},"Update the dependencies array to be: [userId]",{"range":"375","text":"376"},[1130,1132],"[getCartByUserId]",[875,877],"[dispatch]",[2073,2075],"[getCartByUserId, userId]",[2292,2298],"[fetchData, load]",[739,741],"[id]",[746,748],"[userId]"]